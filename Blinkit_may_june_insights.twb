<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' inline='true' name='federated.0eqoq020kqbees19dn3i00g74zta' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Blinkit_may_june_data' name='excel-direct.0y10ri00m0zf7p18ctg3w1iu41bd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Blinkit_may_june_data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0y10ri00m0zf7p18ctg3w1iu41bd' name='PRODUCT_LISTING' table='[PRODUCT_LISTING$]' type='table'>
          <columns gridOrigin='A1:S10001:no:A1:S10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Date' ordinal='0' />
            <column datatype='string' name='Campaign Name' ordinal='1' />
            <column datatype='string' name='Targeting Type' ordinal='2' />
            <column datatype='string' name='Targeting Value' ordinal='3' />
            <column datatype='string' name='Match Type' ordinal='4' />
            <column datatype='integer' name='Most Viewed Position' ordinal='5' />
            <column datatype='string' name='Pacing Type' ordinal='6' />
            <column datatype='integer' name='CPM' ordinal='7' />
            <column datatype='integer' name='Impressions' ordinal='8' />
            <column datatype='integer' name='Direct ATC' ordinal='9' />
            <column datatype='integer' name='Indirect ATC' ordinal='10' />
            <column datatype='integer' name='Direct Quantities Sold' ordinal='11' />
            <column datatype='integer' name='Indirect Quantities Sold' ordinal='12' />
            <column datatype='integer' name='Direct Sales' ordinal='13' />
            <column datatype='integer' name='Indirect Sales' ordinal='14' />
            <column datatype='integer' name='New Users Acquired' ordinal='15' />
            <column datatype='real' name='Estimated Budget Consumed' ordinal='16' />
            <column datatype='real' name='Direct RoAS' ordinal='17' />
            <column datatype='real' name='Total RoAS' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0y10ri00m0zf7p18ctg3w1iu41bd' name='PRODUCT_LISTING' table='[PRODUCT_LISTING$]' type='table'>
            <columns gridOrigin='A1:S10001:no:A1:S10001:0' header='yes' outcome='6'>
              <column datatype='string' name='Date' ordinal='0' />
              <column datatype='string' name='Campaign Name' ordinal='1' />
              <column datatype='string' name='Targeting Type' ordinal='2' />
              <column datatype='string' name='Targeting Value' ordinal='3' />
              <column datatype='string' name='Match Type' ordinal='4' />
              <column datatype='integer' name='Most Viewed Position' ordinal='5' />
              <column datatype='string' name='Pacing Type' ordinal='6' />
              <column datatype='integer' name='CPM' ordinal='7' />
              <column datatype='integer' name='Impressions' ordinal='8' />
              <column datatype='integer' name='Direct ATC' ordinal='9' />
              <column datatype='integer' name='Indirect ATC' ordinal='10' />
              <column datatype='integer' name='Direct Quantities Sold' ordinal='11' />
              <column datatype='integer' name='Indirect Quantities Sold' ordinal='12' />
              <column datatype='integer' name='Direct Sales' ordinal='13' />
              <column datatype='integer' name='Indirect Sales' ordinal='14' />
              <column datatype='integer' name='New Users Acquired' ordinal='15' />
              <column datatype='real' name='Estimated Budget Consumed' ordinal='16' />
              <column datatype='real' name='Direct RoAS' ordinal='17' />
              <column datatype='real' name='Total RoAS' ordinal='18' />
            </columns>
          </relation>
          <relation connection='excel-direct.0y10ri00m0zf7p18ctg3w1iu41bd' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:C93:no:A1:C93:0' header='yes' outcome='6'>
              <column datatype='string' name='Date' ordinal='0' />
              <column datatype='string' name='Day' ordinal='1' />
              <column datatype='string' name='Holiday' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[CPM]' value='[PRODUCT_LISTING].[CPM]' />
          <map key='[Campaign Name]' value='[PRODUCT_LISTING].[Campaign Name]' />
          <map key='[Date (Sheet1)]' value='[Sheet1].[Date]' />
          <map key='[Date]' value='[PRODUCT_LISTING].[Date]' />
          <map key='[Day]' value='[Sheet1].[Day]' />
          <map key='[Direct ATC]' value='[PRODUCT_LISTING].[Direct ATC]' />
          <map key='[Direct Quantities Sold]' value='[PRODUCT_LISTING].[Direct Quantities Sold]' />
          <map key='[Direct RoAS]' value='[PRODUCT_LISTING].[Direct RoAS]' />
          <map key='[Direct Sales]' value='[PRODUCT_LISTING].[Direct Sales]' />
          <map key='[Estimated Budget Consumed]' value='[PRODUCT_LISTING].[Estimated Budget Consumed]' />
          <map key='[Holiday]' value='[Sheet1].[Holiday]' />
          <map key='[Impressions]' value='[PRODUCT_LISTING].[Impressions]' />
          <map key='[Indirect ATC]' value='[PRODUCT_LISTING].[Indirect ATC]' />
          <map key='[Indirect Quantities Sold]' value='[PRODUCT_LISTING].[Indirect Quantities Sold]' />
          <map key='[Indirect Sales]' value='[PRODUCT_LISTING].[Indirect Sales]' />
          <map key='[Match Type]' value='[PRODUCT_LISTING].[Match Type]' />
          <map key='[Most Viewed Position]' value='[PRODUCT_LISTING].[Most Viewed Position]' />
          <map key='[New Users Acquired]' value='[PRODUCT_LISTING].[New Users Acquired]' />
          <map key='[Pacing Type]' value='[PRODUCT_LISTING].[Pacing Type]' />
          <map key='[Targeting Type]' value='[PRODUCT_LISTING].[Targeting Type]' />
          <map key='[Targeting Value]' value='[PRODUCT_LISTING].[Targeting Value]' />
          <map key='[Total RoAS]' value='[PRODUCT_LISTING].[Total RoAS]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S10001:no:A1:S10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C93:no:A1:C93:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Campaign Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Campaign Name]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Campaign Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Targeting Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Targeting Type]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Targeting Type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Targeting Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Targeting Value]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Targeting Value</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Match Type]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Match Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most Viewed Position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Most Viewed Position]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Most Viewed Position</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pacing Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pacing Type]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Pacing Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CPM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CPM]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>CPM</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Impressions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Impressions]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Impressions</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Direct ATC</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Direct ATC]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Direct ATC</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indirect ATC</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Indirect ATC]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Indirect ATC</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Direct Quantities Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Direct Quantities Sold]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Direct Quantities Sold</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indirect Quantities Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Indirect Quantities Sold]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Indirect Quantities Sold</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Direct Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Direct Sales]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Direct Sales</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indirect Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Indirect Sales]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Indirect Sales</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Users Acquired</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Users Acquired]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>New Users Acquired</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated Budget Consumed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated Budget Consumed]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Estimated Budget Consumed</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Direct RoAS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Direct RoAS]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Direct RoAS</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total RoAS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total RoAS]</local-name>
            <parent-name>[PRODUCT_LISTING]</parent-name>
            <remote-alias>Total RoAS</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date (Sheet1)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B7BBE3F9E15D49DFA6E11DE927BCB859]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Day]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Day</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B7BBE3F9E15D49DFA6E11DE927BCB859]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Holiday</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Holiday]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Holiday</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B7BBE3F9E15D49DFA6E11DE927BCB859]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
      </column>
      <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
      </column>
      <column datatype='string' name='[Campaign Name]' role='dimension' type='nominal' />
      <column datatype='string' name='[Date]' role='dimension' type='nominal' />
      <column datatype='string' name='[Day]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='PRODUCT_LISTING' datatype='table' name='[__tableau_internal_object_id__].[PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B7BBE3F9E15D49DFA6E11DE927BCB859]' role='measure' type='quantitative' />
      <column-instance column='[Campaign Name]' derivation='None' name='[none:Campaign Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
      <column-instance column='[Day]' derivation='None' name='[none:Day:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Campaign Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cookies (Biscuit)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Makhana - All&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roasted Chana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Atta Jeera Cookies&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hot &amp; Spicy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Onion Bhujia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Choco Chip&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Khatta Meetha Dec&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pudina Makhana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Desi Spicy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mathri&apos;s&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Soya  Sticks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crunchy Party&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;March NCR Namkeen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Salted Peanuts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clone of oats seeds cookies&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;lets try&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pudina wafers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gathiya Mar&apos;23&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New IPL march&apos;25&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Besan Papdi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;kerala combo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pack of 2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garlic Bhujia Mar&apos;23&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NCR Makhana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clone of Peanuts Campaign&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lite Mixture&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Purani Delhi Papdi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falhari Mix combo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Methi Mathri&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vrat Category&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fasting Range New&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moongfali&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vrat Mota Chips / Aloo Chips&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garlic Murukku&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New All product&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hing Jeera - Channa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oats Coconut&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dal Biji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Masala Boondi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sattu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Combo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lite Range&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ragi Kaju Pista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bikaneri Bhujia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kerela Garlic May&apos;24&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Party Mixes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fruit Cake Rusk March&apos;24&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namakpare&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dal Mathri&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Masala Peanuts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sev Bhujia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cake Rusk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Khari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peanut Party&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Day:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Sunday&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thursday&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Wednesday&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saturday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tuesday&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Friday&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monday&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Date:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;07-05-2025&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27-05-2025&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;01-05-2025&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19-05-2025&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19-06-2025&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21-06-2025&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;03-05-2025&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;23-05-2025&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25-06-2025&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11-05-2025&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;13-06-2025&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;31-05-2025&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;05-06-2025&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;05-07-2025&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;08-05-2025&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28-05-2025&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;03-06-2025&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;03-07-2025&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;04-05-2025&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24-05-2025&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26-06-2025&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;09-06-2025&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;17-05-2025&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;17-06-2025&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;01-06-2025&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;01-07-2025&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;20-05-2025&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;22-06-2025&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;07-06-2025&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;15-05-2025&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;05-05-2025&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;25-05-2025&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27-06-2025&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;07-07-2025&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10-06-2025&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12-05-2025&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28-06-2025&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;13-05-2025&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;14-06-2025&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;29-06-2025&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;09-07-2025&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;16-05-2025&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;16-06-2025&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10-07-2025&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18-05-2025&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18-06-2025&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;20-06-2025&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;09-05-2025&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11-06-2025&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;29-05-2025&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;06-06-2025&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;04-06-2025&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;04-07-2025&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;06-05-2025&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;26-05-2025&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;02-05-2025&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21-05-2025&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;23-06-2025&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;08-07-2025&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;14-05-2025&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15-06-2025&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;30-06-2025&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;06-07-2025&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10-05-2025&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12-06-2025&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;30-05-2025&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;08-06-2025&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;02-06-2025&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;02-07-2025&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;22-05-2025&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24-06-2025&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='PRODUCT_LISTING' id='PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111'>
            <properties context=''>
              <relation connection='excel-direct.0y10ri00m0zf7p18ctg3w1iu41bd' name='PRODUCT_LISTING' table='[PRODUCT_LISTING$]' type='table'>
                <columns gridOrigin='A1:S10001:no:A1:S10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Date' ordinal='0' />
                  <column datatype='string' name='Campaign Name' ordinal='1' />
                  <column datatype='string' name='Targeting Type' ordinal='2' />
                  <column datatype='string' name='Targeting Value' ordinal='3' />
                  <column datatype='string' name='Match Type' ordinal='4' />
                  <column datatype='integer' name='Most Viewed Position' ordinal='5' />
                  <column datatype='string' name='Pacing Type' ordinal='6' />
                  <column datatype='integer' name='CPM' ordinal='7' />
                  <column datatype='integer' name='Impressions' ordinal='8' />
                  <column datatype='integer' name='Direct ATC' ordinal='9' />
                  <column datatype='integer' name='Indirect ATC' ordinal='10' />
                  <column datatype='integer' name='Direct Quantities Sold' ordinal='11' />
                  <column datatype='integer' name='Indirect Quantities Sold' ordinal='12' />
                  <column datatype='integer' name='Direct Sales' ordinal='13' />
                  <column datatype='integer' name='Indirect Sales' ordinal='14' />
                  <column datatype='integer' name='New Users Acquired' ordinal='15' />
                  <column datatype='real' name='Estimated Budget Consumed' ordinal='16' />
                  <column datatype='real' name='Direct RoAS' ordinal='17' />
                  <column datatype='real' name='Total RoAS' ordinal='18' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Sheet1' id='Sheet1_B7BBE3F9E15D49DFA6E11DE927BCB859'>
            <properties context=''>
              <relation connection='excel-direct.0y10ri00m0zf7p18ctg3w1iu41bd' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C93:no:A1:C93:0' header='yes' outcome='6'>
                  <column datatype='string' name='Date' ordinal='0' />
                  <column datatype='string' name='Day' ordinal='1' />
                  <column datatype='string' name='Holiday' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Date]' />
              <expression op='[Date (Sheet1)]' />
            </expression>
            <first-end-point object-id='PRODUCT!LISTING_FC13C80F32C148979FB2CCBB275D6111' />
            <second-end-point object-id='Sheet1_B7BBE3F9E15D49DFA6E11DE927BCB859' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Budget Consumed trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-07-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{402129F9-7BE8-4735-87F5-AA982EEF487B}' />
    </worksheet>
    <worksheet name='Budget consume trend by Trageting Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Targeting Type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Targeting Type]' derivation='None' name='[none:Targeting Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;11-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;12-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;13-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;14-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;15-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;16-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;17-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;18-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;19-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;20-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;21-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;22-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;23-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;24-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;25-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;26-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;27-06-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{893D6331-7D08-47C2-92EA-3EA307EE2E15}' />
    </worksheet>
    <worksheet name='Campaign vs ROI'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Campaign Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Campaign Name]' derivation='None' name='[none:Campaign Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='height' field='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]' value='114' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</cols>
      </table>
      <simple-id uuid='{B57BCF6B-CB6F-469B-8974-7F3BC558A87B}' />
    </worksheet>
    <worksheet name='Cards'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total RoAS]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total RoAS]' derivation='Sum' name='[sum:Total RoAS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Total RoAS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;11-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;12-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;13-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;14-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;15-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;16-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;17-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;18-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;19-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;20-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;21-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;22-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;23-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;24-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;25-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;26-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;27-06-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[:Measure Names]</column>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' value='c#,##0,K;(#,##0,K)' />
            <format attr='text-format' field='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' value='c#,##0.00;(#,##0.00)' />
            <format attr='text-format' field='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' value='c#,##0,K;(#,##0,K)' />
            <format attr='text-format' field='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Total RoAS:qk]' value='c#,##0,K;(#,##0,K)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eqoq020kqbees19dn3i00g74zta].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EEECEC71-13D2-4F3F-8AE2-0C7F90E92371}' />
    </worksheet>
    <worksheet name='Impressions Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;11-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;12-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;13-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;14-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;15-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;16-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;17-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;18-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;19-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;20-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;21-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;22-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;23-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;24-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;25-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;26-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;27-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;28-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;29-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;30-06-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Impressions:qk]</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{7BEC3FF3-0767-477B-9AC8-816979C820D5}' />
    </worksheet>
    <worksheet name='Keyword Performace'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column datatype='integer' name='[CPM]' role='measure' type='quantitative' />
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Campaign Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct ATC]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect ATC]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Most Viewed Position]' role='measure' type='quantitative' />
            <column datatype='string' name='[Targeting Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Targeting Value]' role='dimension' type='nominal' />
            <column-instance column='[Campaign Name]' derivation='None' name='[none:Campaign Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Targeting Type]' derivation='None' name='[none:Targeting Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Targeting Value]' derivation='None' name='[none:Targeting Value:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPM]' derivation='Sum' name='[sum:CPM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Direct ATC]' derivation='Sum' name='[sum:Direct ATC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indirect ATC]' derivation='Sum' name='[sum:Indirect ATC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Most Viewed Position]' derivation='Sum' name='[sum:Most Viewed Position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]'>
            <groupfilter function='level-members' level='[none:Campaign Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]' direction='DESC' using='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-07-2025&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' included-values='in-range'>
            <min>1000.0</min>
            <max>267214.59999999998</max>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]</column>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</column>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]' value='110' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Value:nk]' value='144' />
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Impressions:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Most Viewed Position:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Direct ATC:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Indirect ATC:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:CPM:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk] / ([federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk] / [federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Value:nk]))</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{250C479F-4B42-4715-BAC1-BB4E86768A3C}' />
    </worksheet>
    <worksheet name='Last 30 days trend of all campaigns'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Campaign Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Campaign Name]' derivation='None' name='[none:Campaign Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]'>
            <groupfilter expression='SUM([Estimated Budget Consumed]) &gt; 1000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Campaign Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]' direction='DESC' using='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;11-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;12-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;13-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;14-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;15-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;16-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;17-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;18-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;19-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;20-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;21-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;22-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;23-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;24-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;25-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;26-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;27-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;28-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;29-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;30-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;31-05-2025&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' included-values='in-range'>
            <min>1000.0</min>
            <max>40900.899999999994</max>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</column>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]</column>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' value='48' />
            <format attr='tick-color' value='#00000000' />
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]' value='55' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk] * [federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk])</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{EA76B98C-DD2F-4EFB-84B9-43151240C5FE}' />
    </worksheet>
    <worksheet name='Last week ROI and budget consumed trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-07-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.85657459497451782' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.85657459497451782' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.85657459497451782' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk] + [federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk])</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{CCB86EE1-C21B-472D-91C1-11CA4534CC9B}' />
    </worksheet>
    <worksheet name='Overall ROI by trageting type'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Targeting Type]' role='dimension' type='nominal' />
            <column-instance column='[Targeting Type]' derivation='None' name='[none:Targeting Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.95552486181259155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]</cols>
      </table>
      <simple-id uuid='{66F3CC36-8B78-4B7A-A9E8-8CC8B5B049C7}' />
    </worksheet>
    <worksheet name='ROI Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;11-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;12-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;13-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;14-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;15-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;16-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;17-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;18-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;19-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;20-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;21-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;22-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;23-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;24-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;25-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;26-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;27-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;28-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;29-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;30-06-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Impressions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{6BDF6327-267A-46A8-86EA-19771F02E248}' />
    </worksheet>
    <worksheet name='ROI trend by trageting type'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Targeting Type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Targeting Type]' derivation='None' name='[none:Targeting Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;11-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;12-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;13-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;14-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;15-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;16-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;17-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;18-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;19-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;20-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;21-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;22-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;23-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;24-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;25-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;26-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;27-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;28-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;29-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;30-06-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{74C304B3-3B96-4A92-9243-2AFA3DEDA3A2}' />
    </worksheet>
    <worksheet name='ROI vs Budget Consumed'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Campaign Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Campaign Name]' derivation='None' name='[none:Campaign Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;11-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;12-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;13-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;14-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;15-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;16-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;17-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;18-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;19-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;20-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;21-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;22-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;23-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;24-06-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]</cols>
      </table>
      <simple-id uuid='{C1F8EFDB-F2AC-4B38-ACBD-611D824841F4}' />
    </worksheet>
    <worksheet name='Revenue Spend Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;16-06-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' field-type='quantitative' fold='true' max='950000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' value='76' />
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' value='76' />
            <format attr='height' field='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]' value='50' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]' value='22' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[:Measure Names]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[:Measure Names]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[:Measure Names]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk] + [federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk])</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{013BD454-B08C-4970-B1C2-6D624F838D30}' />
    </worksheet>
    <worksheet name='Roi trend by days'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='string' name='[Day]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Day]' derivation='None' name='[none:Day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;11-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;12-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;13-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;14-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;15-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;16-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;17-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;18-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;19-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;20-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;21-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;22-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;23-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;24-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;25-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;26-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;27-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;28-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;29-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;30-06-2025&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Sunday&quot;</bucket>
              <bucket>&quot;Monday&quot;</bucket>
              <bucket>&quot;Tuesday&quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday&quot;</bucket>
              <bucket>&quot;Friday&quot;</bucket>
              <bucket>&quot;Saturday&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Impressions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{EF90793E-CF5D-4853-A903-1DB8FF8740D8}' />
    </worksheet>
    <worksheet name='Sheet 20'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Date (Sheet1)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Day]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Date (Sheet1)]' derivation='None' name='[none:Date (Sheet1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Day]' derivation='None' name='[none:Day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date (Sheet1):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date (Sheet1):nk]' member='&quot;01-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date (Sheet1):nk]' member='&quot;02-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date (Sheet1):nk]' member='&quot;03-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date (Sheet1):nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date (Sheet1):nk]' member='&quot;05-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date (Sheet1):nk]' member='&quot;06-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date (Sheet1):nk]' member='&quot;07-07-2025&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]'>
            <groupfilter function='level-members' level='[none:Day:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]</column>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date (Sheet1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Impressions:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date (Sheet1):nk]</cols>
      </table>
      <simple-id uuid='{380C5CB7-1C5F-478E-8C2E-9E64F63463CE}' />
    </worksheet>
    <worksheet name='Sheet 21'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Campaign Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='string' name='[Day]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Campaign Name]' derivation='None' name='[none:Campaign Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Day]' derivation='None' name='[none:Day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]' direction='DESC' using='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-07-2025&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' included-values='in-range'>
            <min>1000.0</min>
            <max>43220.600000000013</max>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]' value='391' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk] * [federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk])</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]</cols>
      </table>
      <simple-id uuid='{AE665C86-29B2-4659-862A-F8417D85F572}' />
    </worksheet>
    <worksheet name='Sheet 22'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Campaign Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Most Viewed Position]' role='measure' type='quantitative' />
            <column datatype='string' name='[Targeting Value]' role='dimension' type='nominal' />
            <column-instance column='[Campaign Name]' derivation='None' name='[none:Campaign Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Targeting Value]' derivation='None' name='[none:Targeting Value:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Most Viewed Position]' derivation='Sum' name='[sum:Most Viewed Position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]'>
            <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Lite Range&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]' direction='DESC' using='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;11-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;12-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;13-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;14-06-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;15-06-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</column>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Most Viewed Position:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Impressions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk] / [federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Value:nk]) * [federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk])</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{3AA0DF93-67DF-420A-BB75-392AE10F5E95}' />
    </worksheet>
    <worksheet name='Sheet 25'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;11-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;12-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;13-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;14-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;15-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;16-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;17-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;18-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;19-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;20-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;21-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;22-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;23-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;24-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;25-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;26-05-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;27-05-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{2D98606F-406E-43BA-96E2-8F4FAF48D895}' />
    </worksheet>
    <worksheet name='Yesterday and Today comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column datatype='integer' name='[CPM]' role='measure' type='quantitative' />
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Campaign Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Most Viewed Position]' role='measure' type='quantitative' />
            <column-instance column='[Most Viewed Position]' derivation='Count' name='[cnt:Most Viewed Position:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Campaign Name]' derivation='None' name='[none:Campaign Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPM]' derivation='Sum' name='[sum:CPM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]' direction='DESC' using='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-07-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' value='56' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]' value='472' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Impressions:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:CPM:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[cnt:Most Viewed Position:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk] * [federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk])</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{8443DCB4-D257-4E12-9409-E0F773751DCD}' />
    </worksheet>
    <worksheet name='campaigns by ROI'>
      <table>
        <view>
          <datasources>
            <datasource caption='PRODUCT_LISTING (Blinkit_may_june_data)' name='federated.0eqoq020kqbees19dn3i00g74zta' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqoq020kqbees19dn3i00g74zta'>
            <column caption='Total_ROI' datatype='real' name='[Calculation_-4210584159676866556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4210584159677050877]/SUM([Estimated Budget Consumed])' />
            </column>
            <column caption='Total_sales' datatype='integer' name='[Calculation_-4210584159677050877]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Direct Sales])+SUM([Indirect Sales])' />
            </column>
            <column datatype='string' name='[Campaign Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Direct Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Estimated Budget Consumed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Impressions]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Indirect Sales]' role='measure' type='quantitative' />
            <column-instance column='[Campaign Name]' derivation='None' name='[none:Campaign Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated Budget Consumed]' derivation='Sum' name='[sum:Estimated Budget Consumed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impressions]' derivation='Sum' name='[sum:Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159676866556]' derivation='User' name='[usr:Calculation_-4210584159676866556:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4210584159677050877]' derivation='User' name='[usr:Calculation_-4210584159677050877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Atta Jeera Cookies&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Besan Papdi&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Bikaneri Bhujia&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Cake Rusk&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Choco Chip&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Clone of oats seeds cookies&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Clone of Peanuts Campaign&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Combo&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Cookies (Biscuit)&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Crunchy Party&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Dal Biji&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Dal Mathri&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Desi Spicy&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Falhari Mix combo&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Fasting Range New&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Fruit Cake Rusk March&apos;24&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Garlic Bhujia Mar&apos;23&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Garlic Murukku&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Gathiya Mar&apos;23&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Hing Jeera - Channa&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Hot &amp; Spicy&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Kerela Garlic May&apos;24&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Khari&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Khatta Meetha Dec&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;lets try&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Lite Mixture&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Lite Range&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Makhana - All&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;March NCR Namkeen&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Masala Boondi&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Masala Peanuts&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Mathri&apos;s&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Methi Mathri&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Namakpare&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;NCR Makhana&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;New All product&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;New IPL march&apos;25&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Oats Coconut&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Onion Bhujia&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Pack of 2&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Party Mixes&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Peanut Party&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Pudina Makhana&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Pudina wafers&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Purani Delhi Papdi&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Ragi Kaju Pista&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Roasted Chana&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Salted Peanuts&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Sattu&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Sev Bhujia&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Soya  Sticks&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Vrat Category&quot;' />
              <groupfilter function='member' level='[none:Campaign Name:nk]' member='&quot;Vrat Mota Chips / Aloo Chips&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]' direction='ASC' using='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' />
          <filter class='categorical' column='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;01-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;02-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;03-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;04-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;05-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;06-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;07-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;08-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;09-07-2025&quot;' />
              <groupfilter function='member' level='[none:Date:nk]' member='&quot;10-07-2025&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</column>
            <column>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='height' field='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]' value='115' />
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' value='76' />
            <format attr='width' field='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' value='76' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Impressions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Impressions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]' />
              <lod column='[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Impressions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk] + [federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk])</rows>
        <cols>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</cols>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
                  <field>[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Estimated Budget Consumed:qk]</field>
                  <field>[federated.0eqoq020kqbees19dn3i00g74zta].[sum:Impressions:qk]</field>
                  <field>[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159677050877:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;NCR Makhana&quot;</value>
                <value>4007.1000000000004</value>
                <value>13132</value>
                <value>11877</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.636364' y='12' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{7435070B-2F86-4371-8AA7-DBC5C92A127E}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Cards'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[:Measure Names]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19B103E6-AA79-4747-81DF-F886466C57D2}' />
    </window>
    <window class='worksheet' name='ROI Trend'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40A55192-6275-4FDB-A294-329153DB1702}' />
    </window>
    <window class='worksheet' name='Budget Consumed trend'>
      <cards>
        <edge name='left'>
          <strip size='116'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A31977E3-D23C-4085-8550-AB8B182FB0EE}' />
    </window>
    <window class='worksheet' name='ROI trend by trageting type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A914C700-5224-4E84-A7FE-AF738D1BDF69}' />
    </window>
    <window class='worksheet' name='Impressions Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4000A5EE-F0DA-4F62-8767-78B520D98957}' />
    </window>
    <window class='worksheet' name='Budget consume trend by Trageting Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D7A0698-3A67-4DA1-9822-B9367B507378}' />
    </window>
    <window class='worksheet' name='Overall ROI by trageting type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52BCEC9E-FD81-4A48-88A6-D089C53E7D85}' />
    </window>
    <window class='worksheet' name='Campaign vs ROI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EAB1EE8-ADAE-4C06-997A-3ABD9A832BE9}' />
    </window>
    <window class='worksheet' name='ROI vs Budget Consumed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3983CB79-6406-4808-A7CD-5C2D6C09A675}' />
    </window>
    <window class='worksheet' name='campaigns by ROI'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6EEA93C3-ED2E-40B9-864B-8CBC6AD73EB8}' />
    </window>
    <window class='worksheet' name='Last week ROI and budget consumed trend'>
      <cards>
        <edge name='left'>
          <strip size='148'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='124'>
            <card pane-specification-id='1' param='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6232208E-7BF8-4047-A498-E76F90B7A5D9}' />
    </window>
    <window class='worksheet' name='Last 30 days trend of all campaigns'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{206DBAC8-0FFF-45E6-85A2-BD2FFA7BEE40}' />
    </window>
    <window class='worksheet' maximized='true' name='Yesterday and Today comparison'>
      <cards>
        <edge name='left'>
          <strip size='108'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD986B48-A154-4D36-95D5-6B23F6625D47}' />
    </window>
    <window class='worksheet' name='Keyword Performace'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Type:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Value:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC6344CB-3E83-4634-8A49-A4D911EFCD52}' />
    </window>
    <window class='worksheet' name='Sheet 20'>
      <cards>
        <edge name='left'>
          <strip size='116'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='120'>
            <card pane-specification-id='0' param='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date (Sheet1):nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Holiday:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D6DF421-1D93-4A5F-B033-A669202DFE6B}' />
    </window>
    <window class='worksheet' name='Sheet 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0eqoq020kqbees19dn3i00g74zta].[usr:Calculation_-4210584159676866556:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC236C7A-8C28-43BB-B36C-D8FF9FDF949D}' />
    </window>
    <window class='worksheet' name='Sheet 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Campaign Name:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Targeting Value:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97B106FA-4A3C-4FEE-B1A1-D64FA9A06329}' />
    </window>
    <window class='worksheet' name='Roi trend by days'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{603803C0-651B-4E80-B205-0A54CE296B2E}' />
    </window>
    <window class='worksheet' name='Revenue Spend Trend'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DDFCE47-696F-44F7-95E5-C1F850ECCC1D}' />
    </window>
    <window class='worksheet' name='Sheet 25'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqoq020kqbees19dn3i00g74zta].[none:Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71C256D5-EB88-43D7-8193-D43C035DF979}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Budget Consumed trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Budget consume trend by Trageting Type' width='192'>
      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
      oo0FVQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Campaign vs ROI' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cards' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Impressions Trend' width='192'>
      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
      Jm3N/wf+z3wSlGA9ZAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Keyword Performace' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Last 30 days trend of all campaigns' width='192'>
      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
      /wdU1mxpauMouAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Last week ROI and budget consumed trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overall ROI by trageting type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAE10lEQVR4nO3dzW4bVRyG8Xds58sfdT4cJ6GJ0pa0YlG4A5ZcFneBEJteBRcAEqsukZCA
      AqVJ2sgmdeI4sT12JnPYVKDWliDNjAN6n98u4+SvcxaP58jKyFEIIQgwVbjtBQC3iQBgjQBg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg
      jQBgjQBgjQBgjQBgrZTH0IvhWJ8/+SaP0UCmcgkgTYOeH53mMRrIFEcgWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWJsIIISg49YrtY5P/rqWJMlMFwXMysTzAGnc
      1eu+9HC3psMXvyktlXXw64/66PEnOu10tNJo6vS4pdJSVYVkqLRU1mIhURKk2nJTyWighXLt
      NvYCXNuUO0CqQrGkSJHOej29PDpSc2tbS2lPf5yPdd5ta7G2qXG/q7HmlIwG6o8S7Wxvq7X/
      sy41dxv7AN7LxB2guLSqO8V9tTtd1ao11Rs1VeaC4uKituqJVhobevHsJ6XzVd2tF5WWaqqV
      F6SooKtQ1Eajrv5gdBt7Aa5tIoAoirS1c+/NT423XmusLiuEoN37D1Spr2hh7u8/D+mV7n24
      p2KU53KBbF37meAoirTaWJ+8XiiqWilnsihgVvgYFNYIANYIANYIANYIANYIANYIANYIANYI
      ANYIANYIANYIANYIANaiEELIeug4udJ33x9kPRbIXC4BAP8XHIFgjQBgjQBgjQBgjQBgjQBg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgrZTH0DDs6uLJZ3mMBjKV
      TwAK0uUwj9FApjgCwRoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwNrU
      ANrtlnqdljq9a/5L89VYrdcnWawLmImpzwNcnJ3osJ9otznQ19/+oJ3dXW1sbanz6lDzlTsa
      XEWqlhL1ekMtVquKzzpaWW2oHw81X11Ts7I0630A72XqHaC0UNZOo6b26UD39x7pwd4j7f/y
      TA8ff6xW+1gLo44qy+uSIgVJa80PVC8vKCoUpGi2GwBuIgohhHcvvnspvRyqdTLQ3c01Tf72
      pBB31f/q08wWCeRl6hEoit5+Gy/Ol3V3s/zmtX8e+i8aAf4T+BQI1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1nL5goxIkopzeYwGMjX1eQDABUcgWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWMvla1LD5aUGT5/m
      MRrIVC4BpMNYnS++zGM0kCmOQLBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALB28+cBQtDLg99Vrq/r/KSt5Y1tVTNYGDALGdwBUg2GseJhX8N4pDiObz4SmJE/
      AVWu76mi6wXqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ROI Trend' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ROI trend by trageting type' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ROI vs Budget Consumed' width='192'>
      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
      UpIxollxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Revenue Spend Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Roi trend by days' width='192'>
      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
      6L/874Wvqb29DPyb//Vrt7m0HuJ73/8dwgu/YWU7wfGx3iab4d5ufv3OR/QUakwfFw9/Vu99
      ytjxZxjrcvDLX721JwGUcimWVjcZHJuiK3AIigGNOm++9Q6nT58incliHHCt/zMXX+D/+/nf
      YDFrnH/5tw/2YrvkW5PfOjU3xS//+q/RrQ6+96p4TUFRrIyMj4PZwGEXf/SZ48/w9lvvcqdW
      49SFl3btj2mavPn2W/hsGhsbG1x6/e/SKXjaxkIrxPJ18okdTj37PB57c89VLubJFUpsbW0w
      M3ccr3t3k3er5uSNN36Iqqp0B70cdKXzp9evcPTMMwQcBjdvXWPwO7u/nwfFtyb3eOP2bdLx
      MF5rhaWthNBmaWWFs888y/lTc6wsLQttVuevoSsWSnWNOzfEVaxGJcNmOM5bb/6KDz6+3nLX
      VMDro2Q6OHlklla/InVrcYnkxi0GRwaZX1gS2qwtXOdX73zI7Ts3KZQq4oYeA71epdYwWLl7
      k3C61tKn/WJwaJTNlUXmF5YYHB472Ivtkm9NDzAwMs2Zcx1YamXKDvHutBdffpUb126g29yc
      OTkttHH5uzg5fAKMOqH1NaFNLR/n7t1tvMEBsuFVdPMMqmDaEuwboL61xsLSGi9OzAnbmhjo
      I5INsLK4xKnnXxHaHD33EgMjYT66uUB/d1Bo8zhUUhvcidXIpXI49C2K42NfyQLtN10D43x3
      YByAWCxycBfaA4e+BzD1Gr/+5S+4eXeF2NotUi2KE21mmffeeo9ry9GWm29008rpc2fp7wpi
      tYoXZQIdQW5evcxbv3oTX6d4/O/onmai2838tY85cvZ51BZ3cWtjnUS2hNIoUW1RVr8Z2iCb
      zXL2/GnW1xaFNtc+epsPrl7j+Oln+OCDt8QNPQZ2fz+1TJzR8Um6+8dxHvDjb33tHun4Fn/+
      5z8nmtl9z3VQbG6uHf4eQK+X0bzd2Co7XLu3zMmuk0K77Z0M52b6SSgelkNxTk42r4RevXoZ
      VW+geTtY3Y7x0rNnmmxCqwvMnnme1Ts3iG4sMDvRXKZdTW8yHynhdmrM3/wNI33f42+XzFiA
      iaFeNuJZarjoaJFtcXg6uXj6OG+/+SaufvF+CE218/x3LnLn4/dJlL5+ebJuGHyyeP8JbOue
      JV0yweLnk4VtAJ6ZG9hV5u1RbK3e4Va+ysXX3uD2x5dhdnxX7Rj1Ej//xV8SHJhkxF3EPnqJ
      XlFpwWNw44M32amq2BXIloqHXwCqw8+ZE3N4PF4UhZZd9tkTx1iP5Tkx3kfV4hDaeB0aGzsN
      vn92lNtr4j0Ks6ee4+aNm5w89yyNsnhRSHV40Iw6wd5RRvoCiKYAJiarkR2yqSQnRnvZKsKw
      4Evr7/JzfX4Zu8PH8SPiIrbhoUGuXbuBywInTn39xbtaXedf/7/vtXz9T//1H37tNh+HS7/1
      d0klk/jtcOb8+V23Y5omwZ4Rxjo03v/wFi8M737Dz9zJMwzrdjr9rr33AI1ahUyugNcfwK4d
      jJaMRo0P33sHh9tHdP0Wl8afwy+I72DvEMFe2ImH8f6tlKNeKGCWShwZmuHIEFA0OdHjoRGP
      Y3W7sbq/jEyLYuP0uWdIJhP4fH6hT5VckrpV4+ypE/R1BVp4bsFn17D3DbGc0vl+i8TNUmgb
      tZ5j7Mh5lpdXuXCqea5wY36e0aBGXJtmc/k2E4Mvt7jm4eDGUpS/uiJOMhwb6+Z3L81+vQYt
      CjbFoHt0jt8fmkTbw9rF0uI8O7k6mDWCfVN7E8D66ip2jx+PeMfjvmBVNMYmZ5ieniE+0kEr
      nf3x//Nv8fROsrRwg5/8k3+Ow/ZlV5H70z8j//O/EL7P98YPCfwXf/DF3+t3PuRXn2xQTId4
      +bW/x+mjzVs+a8UkY3MnyUTWWF2z8Nz5081DIIuF5176LqZpUspEKNcQfnHHJieI5mtsrW1y
      4tnnhT6eP32amysRHKUNBg5pScGDRNMFPryzJXzNpn79gji9WiBXzHPtygegeXjm/Jmm+/24
      fPmz2BYs7DEL1NvXQyQaZtuwMTYYPJBjUerlLJ/eukbN1Dg2c5xWQ9U3fvyP+eTqJ2innqHT
      Jx4CPQ5jxy7yPUeAtz42OHVEvN/Z03+USYsbz+gZ8rmM0MY0TX71l3+KaZqEUhV+/KN/ILQb
      GJ9hACjmM1RrJXA1Z7A8wT4uBfsol0sUi+JitW8ziuZkZuYoQ/291GtVhGPOx8SqKIxMTDD1
      2R6VPQmgUi5TrekEg7YD29FlGg0GJ2bo81m5/MFHXHj2Ig+uYWUrZeqfnYMzceoUhmmSKBYB
      8Dns2JTH+4iVeplMOQ2ArdvPa3/nZWL5MAB21UGH68v0o+b0owHl7A41i4dWa7xjo2NEolGO
      nJhtmXH5m5//CTg7uXvnGn//J/+10ObmR79mM9VgbflTXv+9H9N1sEWzhw/TIJZI8smHb6Iq
      Ll7+wQ/x7TLcUrkcE/4C77z9NpNHT+1NAN39w3T3N2913E80V4BTRz04HQ7OutxN4v/ZzWus
      p1PC9/6TcxeY624uiRBxY/sa/9u7/5PwtVMDZ/kX3/1XX/xdToX4v/79X9Jty6KMv8obv3W2
      qdbLYrEwfewMg8NJyqa9Zc916eVXuX7jNmMzR+kLeoU2x84+T/3adXJ9w8yMtd/hAVbNTjER
      YSuSYmS4A1uLtLOu62DolGsN3C6X8J5PTh1hcHCEoYlpKpXK4c8CWawqTodKrZCkoNvoPgR7
      KpzBYX7yB3+Hy2/+BSfPn20aj+YX/xVGI/fF3yqQ/WxI7Jn6H1Ds3V+85vIGufTii5TL1ZbX
      U21Ozj/3PMdOfbtPaGiFRbHxyqvf45VXv0c+FcUwAEEcXLlymWImg2GYTJx5iamB5kXDwcH7
      Ow9LpTLl8lOQBtWrRf7t//G/09vTQVYb4B/+8AcHX8bbyhfDIFkq3f/D5efZH/wIKBAvgNUC
      XZ9t+2yUljHraXEjZg2Af/PO/8gnIXGpxT+79M95fvwllt69zcKvxGXi48/Ncvx3ntnT59kL
      1WoV9Bqb23HGJydQD3DvsGnobIU2KGZ2yJpezp3sE9o1ynlwBTkxGKDaYuj78Tu/IFFWWbl3
      i9994788/AJQ7G7+6X/z3/LR279g7ujFbyz4AXLVCv/LZfFKrFPT+Omrj7+hp2E0aBh14WvG
      Z5kK0zAxWpzzaejf7LHNV65+iF6rMDExwUdXb/HCs6d21Y7RqFEzLF/J2jXZ6HWufPAewaCH
      iqd1SbWu64xNTtI70o+1xZjz7LMvc/36DYrDE4wP9hxuATRCVwETC3Dx2CiwQiN0/whFZeAs
      lsec4Er2n9H+Xt59/yqlis6pC6/sup34wlu8s+VhwKtw9vx53IIqXUVz8MaP/hG3PnoT9/hE
      y9ITq92Jwyhw+d13OH72IkFvc95Zc7i5cPF5TlbuDzkPdQSV/9M/hRZPSc8/uwzOVotQkoOm
      kM0S7O1BbdQpVSogPPbg0ah2Dxeeu8SIu8LdpWWOH/3qQmDt+h+Beb+Qas4OhP+M2v3kHNrJ
      P8SifhnkQ30DuIN9DDQUfO6vppPTf/Qz8n/xi+br78prSdsTS6ZwGHk6Rk4Q3Q4xPdS5q3YC
      g3O8/zd/Tijgw1CbRVR9939u+RDUjvwePCCApZUVsleuMjk5yYLq4fj4AxlA0wTBOpUUgGRX
      HJsZ59ZWCY9mZXB692c65cMLjJx9ieS9T7CZ4tqrx2VodJqz54KY1SJVx+OdkH3oy6Elh5Nb
      y5uM+g0MR4DF+eu7bicw8QxqeotXXnmFkYm9nQ5+7OhRunv66OjqxiXYWSdC9gCSXTE1OkH/
      2ATLn17DHWguPX9cshvXiVe9JD68imJkGRsZ23VbN65eJl8xWVlZ5Pfe+Mmj34AUgGSXjE3d
      31F39PQ54jvxXbfj6ZtmQK/Q6XDy3nXxVtbHxWF3UEJlZHSQgOfxSkalACS74sbV98gUdRYW
      bvODH/7DXbejOoN8XnP4grb7IkaAuZPnKWWThJLBlusATdff0xUlbcvAwBC51Qgj4+MMdu8+
      HV3ORPjg+j3S4XsEp58Xnmn6KH61vEj8b1XJfnJzB4BXxqcYaLGvA6QAJLukZ3Cczp4BtiI7
      e9pOqdrdqOh4fR7m5sQHBzyKpWSiZUHk2YEhBpACkOwT1av/N/r65S/+7gZKH9//f+30P0Cb
      fu1rtac5fbz8nd9iaf4GAeeTr3SUApB8LYz0OvqWuIhPnXr8n2Zt7OyQ+aOfffF3B1D65TuU
      AGsgQPAf/1d79PTxkAKQfCMYxSKljz4Wvqb29sITEoBcCJO0NVIAkrZmTwIwTZN7dz6lVPv6
      P54gkRwG9iSAfCpKtlCj1jAwDOOBIyckkqeDPQkgFk9SLWWIJzNYLJYDOV5PIjlIhFmg9cVb
      3Li7CsDEkdOcnB0Tvnn6yHEGh0ZQnG4Z/JKnEmEPMDg6jl0BFAdjIw8/hsPl9WHfxWlfEslh
      QCiA69eucenV3+b133qWm9cP/sfrJJJvCuEQaKi3m7/6y5+jmgZzZ3d/Eq9EctgR9gD+YCdO
      u5MXXn6JSlF8jLhE8m1AKIBP5xd57bsv8h//+D8xM334ftpSItkvxD2AS+U//+ef4/K4uHnj
      OmXxpnyJ5KlHOAc4cuZ5jpy5f1Z9ZPEjkmUYOuCf1JRIvgkeuRAm8/uSbzPCHmB7bYG7K/eP
      Mx4cm2LmEPzIuURyEAh7gGDPINZ6kTufXmd7J4cia0Yl31KEPYDT7cXfM8BMvYpq1J60TxLJ
      E6PljrCR4RGOzM6SLR6+HziWSPYLoQBK6Qg/+3f/nvHxCfrH5ujv7XnSfkkkTwTh6N7V0c/v
      /85r2GwORkeGnrRPEskTo+X0dn07xqXnz7Nw+86T9EcieaIIBZBKJZmdGOXjKzeYOXrkSfsk
      kTwxhHOA29fep6zfP1w0nc60/PlOieRpRyiAnsFJpqZnAbBa5SKA5NuLMLrnjhxDVVVUVX2o
      AEr5NAuLS1Qb+oE5KJEcJHt6vFs1B4NdTtZDezvXXSL5ptiTADSryWYkhdOuoOs6huBHyCSS
      w8yezgZNJZNgsWCzaSiK3BgvefrYkwC6+4fp7h/eL18kkieOTPFI2hopAElbIwUgaWukACRt
      jRSApK2RApC0NVIAkrZGCkDS1kgBSNoaKQBJWyMFIGlrpAAkbY0UgKStkQKQtDVSAJK2RgpA
      0tZIAUjaGikASVuzJwGkdyLcvn2T7Xhmv/yRSJ4oexJAoKsXn8uOqshTISRPJ3vaFB9avYfV
      3UXQ75KnQkieSvbUA/g7OmlUCpSr8ndUJU8ne+oB/MFu/MHu/fJFInniyCyQpK2RApC0NVIA
      krZGCkDS1kgBSNoaKQBJWyMFIGlrpAAkbY0UgKStkQKQtDVSAJK2RgpA0tZIAUjaGikASVsj
      BSBpa6QAJG2NFICkrdmTAEzTJJvN7pcvEskTZ08CKGQS3Lm3sl++SCRPnD0JwNvRTYfXCSCP
      RZE8lexJAKmdCImdBPFUFkVRsFrllELydLGnUyGC3f282N2/X75IJE8c+ciWtDVSAJK2RgpA
      0tZIAUjaGikASVsjBSBpa6QAJG2NFICkrZECkLQ1UgCStkYKQNLWSAFI2hopAElbIwUgaWuk
      ACRtzd5+KT4e5ubNm2RLtf3yRyJ5ouxJAIlMkZMnpomH4/vlj0TyRNnbqRCNGsV8Hotm3y9/
      JJInyp4EMDk9SSxZZny4a7/8kUieKHvaE6xoDiYnxoAvT4XoCTi5eGxQaD812IGu65gOB/YL
      F8RtBvzoug6AZfK7YDSEdjoKFl1nPNCBR9WENm5VQ9d1lKGh1tcbGEDXdTocHVwYvii0GQ2O
      328HC8e7e4U2NlX9wm/FdwGzURDaGdhB15nunEVBEdoEnUF0XcfV6aHv6LDQxtt3/z6ZihfF
      f0loY3UMfOaT2fI7Ab44zaNrsg93l09oo9jvfz5L91Esk+LPZvqG0HWdHv/TEwMW0zRN4Tt3
      ga7rKIr4S/06NqZpYhjGvrS1nzZWqxWLxXKofHqUzefB/agTOw6b308qBvY1DfrgTa7k81Qb
      dZYW5tmOJYU2plEjny8TWl9meX2rRVsGuWyeZGybu4tLNAxT2FYum6OUS3H7zjzFSl1oU8zm
      qDcqzN+5zU46L7SplUuUqzVWlxbYfGBy/9UAapDLlgiH1ri3ssGDz5Av7Uxy2RyZRJQ78wvU
      9NZ+V4pZ7ty5Q7ZYEdqUsjnqeo2F+TtEExmhTaNeoViqsr6yyFoo8sW/WyyWB0Srk8sWiIU3
      WVhaRX/Ivcynd7g9f5dKXRfa5LM5apUi83duk8qVhDZPQwzsqwAefDpmYhFCoQ1sgX7S8Sim
      wMYwSmysb5LNg5nPUHnA5ks7g431EOF4moEOO+GdLwP3wbZCm5usrm8zMzXExnpYaBPf2mJt
      cYneqTli25tCm2I6wdb2Jrrip5iMoz9g86VdlfW1DVKZGrZaiULDELa1ub5BKLzD1LCf9c2k
      0GZ7c5P11U3GpyfY2tgS2iS3t9hYXcU/NEEisi20qZWybEe2KFZs1DJJag/YfGlXZ2M9RDxZ
      oMNmkCpUhG2FNjZYC0WZm+hhdT0utImGQqwtrzI0PUd4c11o8zTEgPLTn/70pxwAdreTYr5E
      T08XNk3F5XbxtwcPFotKo1om0N2Dw2XH53Y32YAFKzp2jx+HzYYv4Ee1NlvZNSumYsPrdOLw
      enHYmseEDpedUlWntyuAomi4Xc4mG81hp1wo0dXTg92u4Rb6pGI0qniDnff99riFQyPFaqI6
      PThUDU8wiE1ptnHYVeooBHxubA4nTkdzRs3hcVIsVOnp6UBTNdwuV/O1NBvVYpFgbx92pw2v
      0G8rGHVc/g4cdjs+nw9FcC81xYLV5sRls+EOBLBrzcMHh8NGpQFdQS+KYhfey/2PAR8Om31v
      MeC2U6p8GQMHthJcTieJZ7JEYwlSOwmhjWnUCW2GicailHeSFMVWbIVCxKNRDLNOLJYRWkXD
      26QTccqmSXQzKrTJ7kTJFLLE4jmScfHaRa2QI5pIEo3Fye4kEU+/GoQ2tohGo9TSGbINXWgV
      3gqRiMUwbRbC6zGhTSwSJptOkCvXiYfFNoVEnGQhRzSWJhnfEXtULbEVjhONRSnsJKkKrQy2
      NkNEI1H0SolkviS0imxvkYpHqWtWwmvie5mMRcjk0iQzZZJxsd/7HwOxvcdA/KsxcGACsDnt
      9A+O47JWSWTFWQOLRaW7v5+RHh+bkR2B8gEseDs6OTYzxurqOpYWkzmHy83REyeIbqxQF1qA
      3elkdGIOvZggXxavXqs2G70Do3Q4IZbKtfBJIdjby9RwF2uhCNYWVm5/B8eOTLO+vIJFbeG3
      08nssROkIxtUdfHZqnaXg8GRKdR6jkyhLPZI1ejpH6LPbye8k2rhkRV/VzdHJgdYWQ+1nNA7
      PT6OHT9GaHkJQ/Ckhfv3cnLmKKVUmFJN/AB4GmJgT2nQh2F3+ylsr2C1WhkZGxUbWVQUs0o4
      XqF3fJTmjv0+HqfKysYWDk+Q/h6/0KbD72VleQVMG2Pj4hScxx9gaW0NxUpLnzSHm2pomTIW
      BsdGWiQqrdgUnc3wDsGRYXwtgtvrdrCytolF8TAy0iP2u8PP6vIyFqyMjIlTnk5vB5vLayhW
      S0u/raoDoxoiVoa+sVFsQisLTpuFtVAUb3cvXd7mYQtAwOdmeWUN0+JkbEJ89KU/EGB1fQWr
      xWzp09MQAwfWA2SjW7h6hpmZnSEdF3dHplEmX7YwOztLI59poVqDeCLH7Ows3V6FeErcSW6F
      Y0xNTzM52ktoSzy8iW2F6BmdZHp6ilh4W2hTTO9gdXcyNztLPhlH/Eyuk87WmZ2dRa0UKbV4
      ckdjSWZmZhjpdROKiLvtUCjCxNQ00xPDhLciQpvk1gaBoQlmZqZJRMU2tXKWmsXF3OwslUyr
      oZtOMlVidnYOr9IgUxT3gtuRONMzM0wMBdncEg9dwlvbDI1PMzM1SWRrS2izfzFgfv0YCD1e
      DOzrOsBXXDZ0Fu/eAcVOV+8AnR3epu7NNE221u6RqxgEOrro7+8WKjId3yYUS+PzdzA40I8m
      eOJWChkWVzZxe70MDgzhdDRPgPR6lfm7C9gdLnoHBvF7mp83pmmwsjhPDZWu7n66O/3Cbjmy
      uUIyX8Uf6GRwoAerYDiRS8ZY247j9QcYGhjAJphM1sp57t5bxeX2MDA4hNvZPAk29Trz8/Oo
      dic9fYN0+NxCv9eXFyk3LAQ7e+jtCQr93glvEE0V8AWCDPb3oirN97KYTbC8EcHj9TE4MIjD
      3jxQaFRLzC8s4XC5GRgcwuNyNPv02DGwRK6ifyMxcHA9QCSEbnNh1ZxfSd09iGmUiSfLmKaF
      RjqJeEqms7kVRwF8bivhFhOgtfVNXHaFQFcHG6viJ1J0Yw2724XN5SeyuSm0KaZilA0Ni9VG
      LhZp8SStEonlME1QSrkWk2CTjVAYm2Khq8vJ+pr4ibS+toHbacPbESS0FhLa7GyuY3V5UOwe
      Yltim1opQ7ZkYGKlnIi3mATX2Q6nwDRxWWok8uL5xPrGFg4VOnt9rK+EhTZb6+s4XQ5cviBb
      6+tCm8ePgdLjxYBl/2JA+ywGDkwA7oCPQKCHTo9CriT+OixWO109nUyO9BJJpFuOtwPBIHNz
      U2xvbqNq4mmLz+9nbPoIudgWqGIbb0eArp5h7GaRckPc8TncHjqCXfQHXSTzpXGPUBwAAAtu
      SURBVBaTMo1gd5DZiSFC0QRKi8mkvyPIzOwMkY0QmuBpdN9vH0PjM1SzMXRLi7lE0E9HsA+f
      1qBQFUtSs7kIdnUy2tdBPJNv4bdKoCvI0ZlxNkNR4dMfwB/oYHL2KInQJopd7Lc34KdvaALK
      aWqmuJ19j4HZ/YsBx+cxYB4woc3QI22imyGz9gib3E7MTBcrj7Aqm6HNnUfYGGZoc+uRPoU2
      Q6bxCJv4ZsgsP8qjfMqMJ/OPsKqaoc3oY/n0KLY3Q2bjETbJrS2z0NAfatOo583tcOoRLdXN
      0Gb4kT4d5hg4sB7AaNQoV2vkMkniySyi561p1olE4niDHS2UD2BSKpWoVMuEt8PoLaYsiViU
      at1KMOht2VK9WqFaq5JMxMi06P7rlQI7ySwdweBDPt3nPhXZDoW/UgrxoE0sGsGiOfG6m8fH
      n1Mul6mWKyQSsa8s3z9IKZcmnS8RfIhPpqFTrlQpFTKEozvC+w06kXAUVyCAvUV6E6BcKlEp
      lojHo9RaTPAzyR0KZZ1gMNCynachBg4sDZrZ3iRlqri7R4iHQ3R3NqeuDL3I9maMrF/D4fYz
      Otwv6LoN1tc3MQ2dwW434Z0Cwz3NHzAej5PL5aibFoZGRnE7mhOB0Y01qrrJ4JFThJbuEjhx
      vMmmkEoRz9dQjAa+YBf9vV0Cn2qf+WTBWc9Q0ntxq81fXzwSIZfLYVpURsfHsQsmbhtra6gW
      k5mj06ytbHDs6FSTTXIrStXnolEo09nTT3ew+V7WShnCiTw1w0VjJ0ajr5vmwUud6HaUXC6D
      ancxNjosXAleX1/HNEyOz/SwtBbnyFRfk00iGsfqylGrNegbGCbgbU4oZMKbpIzDHQMHVgrh
      8HlJRcMkkkm6+gfulwsIPpiieRgdHcSpWrHabIJJiQWLUWcnmaTcUBkb6ReOuRu6wcjYGMGA
      H8Mw0ARjQLfHzU48QjyWYHBkTJhxMfQGno7u+xkSC2g2m8BvhUalSCKdQnH76O8KCheVDNPC
      6NgYfp8HwzBRBSLxODW2Y3FSqRwjE+M4bM1+6/UGnYND9HYGAROb1hzaiuagkE6QyqbwdPbQ
      GfAJ/DbBYmNsfBSP0wZWRSgAuwqR+A6ZXJWJqVE0wVyh3tAZGBmhO9iBaRhoAp8c3gdioG8A
      n/fwxcCB9QC1Yp5iw4Lf4yKfy0Nfd5ONBRs70UUyGSflqs7JU8eEbaVTKbxeH/VahXKlgeZq
      vtlGrcjdhUXQq/h7RoU1NaVchrrixGezkMvl6Ak2177b7BrLS4vYbTYapsKxI9MCj0xS6Qw+
      n49ysUjDBE0woigX0iws5NDrZfpGjyBwiWw6jd3pwWI2yOUKBATDJYdTYeH2PE7VApqL2cnm
      RSWjUSWTL+Lz+Sjm85ggFG42FSGbS1Kt1pg+cgxBZpZMKoXH68NsVMjlKziDzWlX1dLg7vxd
      VIuJ3RNkXFAL9JUYyOeh//DFwIHNARq1KlhVNJtGvdZq07xOvW5gs9kw6vUW41aTWq2BzWbD
      ajGpt6i7qVZraJqGqipUq+Lr1apVFFVD0zRqLWz0eh0TKzabjUat1sIng3pNx2azYTYaLcek
      tVodzaahKhZqtRYJ1WoNVdPQNLWlT/VqFauqommt76WhN9ANCzab7bPPIMKkVr9/Ly2mQaPF
      +L5au38vNdVKrSael9SqVRTt4fdyNzEg9mh/Y8D6YAw8cnq+B+r1mhmJREzdaJ1P0RsNMx6O
      mNWHZCUMXTezyR0z+5AMgGEYZq1aMKPRlGm0uJ5hGGa9VjUjkWhLG9M0zUa9bkbCEVPXH+53
      Ihwxyw/z29DNQi5lJjOFh/tdK5nRSOIRftfMSCT60HvZaNTNWDhi1vXWPul6w0xFo2ahVn+o
      35VyzozHsw/1qVarmJFI/KH38osYeMS9/KZi4EDPBVJVDVVRqbd8koJVUVBVFaPRSv2g6w0s
      FitWq6Xlj3Gbho6JBcVqxTBaXc1EN0yMRqPl0w/TpPHZNsJaQ/zU/txvxQq1uvhpBGCxWNFU
      lVq1VWnW/ZVQVVWot3xq37dRNBW9UW/52UzTxGKxouv1lk/Iz7wCw6BWb9CqBqDR0FFVFUVp
      vQNO1xsoioqqKA/ZJWei6wamYXx2T1vZNLDAQ++3iUmjXsd4ROGCrjdoNHREA8AvbAyDRr1x
      f5homgdTClErZlkJRVGsFmLxNC+88KxgGbzB0sI9UFR2NiOc+u7LeJrd5cYn17FqDkaGOsmW
      7YwONqcDF27fxMBC39gY8c0kc0fHm2wiq4vE8iXKdSsuu41TJ4402ZTSMe6uhSmWKridTk6f
      Oy1Iz9V499fvE+h0sZOy8NIrz6A1TSZNrn10GdXjJ7KV4OKLl/C5m8eky4tL2FWdfN3EqnqY
      m2ouiNteXELrdBGKZFGwcFrgd7WYJpIqsBOOo6oKJ86dFkzw6txb3KBUyGLTVPon5+gQ+HTt
      4w9x+TvwdXTR39OFKL4XblzHcDpxODyMjwwJbfLxLZZjKSrFOnaHjTOnTzTFgGFU+OTKp9T1
      BjbNxqkL5wTZK4PbN25QqZTRFQczR47T4Wn2e3XxDg2jxna8wsTMDKP9nU02O6E1ElUTlwqF
      inlwcwDN4cDhcDM5OcmQYPJzHwXN4WRycpLxseEWzljxd3RydG6CjbUQiiCTAuD2+pg6cpzU
      9jpGi3JZm9PJxMwssxMTuJ3ieklF1RgYHefY3CwBv6fFc8TGhefOoigqYxPjguAHsHDq3AWc
      NoW+wWFh8APYNAs7mSqTEyPYNLHfTq+TzdUo07NTwtQe3K9iLefSFMsFrA5ni5y6imZtkC3k
      qejgarHK6+/sYXZ2FrdqkCmIixOcHh8zM7MMdvuI7qTEPtkd6LUGqmpB1VrVpyqoiolmUzGt
      SosYsKBpKqrdzfhIP3pD3HurmoZuWJmaHsfSYqRgdzqoVytUKlUcTufBZYFM3aBcyrG8VMDu
      abVYYmLUyywtLYFqp9VvzttUk+XVTTSXj+5O8SKHx+VgZWkJDIWBEfHJDR6fj+W1DVQreIPN
      uW0Azekmu7UCFis2Z3Px1ud+RyNRFM1FuZzBMLsExXAmiXgU3VCwUqFUM3DZmr/eQMBHodpg
      dWWDngFxybAvGMCZzhFZXcHlFx9BY7FYURWVvr5eFJu4zBlAVRV6e/swsAoL+AB8bhsLi/cw
      9QbDEx1Cm67uAIsLCyiYdPQMCW1sTjcupwOr1YLDIy5hxqLg83uoG1ZMxd7yiezxejCKNRKp
      HJPT4u/O6/VSqBoUMkn6RybF7QR7ORq4/0AOb4cPrgfI70RwdA4wMzNNJiEuBDONKoWyldnZ
      WfR8tmUp7E4yz+zsLF1uhUSmxS6mSJyJqWnGh3uIRMQlvIlwhO7hcaanJtlpUVZcziaxuoLM
      zc5SSCValkNn8nVmZ+ewNcqUW8wnYjtppmdmGe31EonnxH6Ho4xNTjM1NkikxY6wdGQb/8Ao
      M9NTLXdf1cv5L8uhs2nEI26dZKbC7OwcHkUn12JTUCyeZGp6mrHBAOFoWmgTj0QYHJtkemqc
      WERcMPd5DMzOzDxWDBiFh8fA3NyjY2ByeuahMZCNbXD1xm3W1tYIx5IHWA5tmsTDITKFCkOj
      Y8Ku2zRNcukdojtpOnsH6Qo0zwAAqqUc66EIbn+Qwd4u8aJTo8ba2joWzcnYyBBWwbDENAy2
      Ntcp101Gx8ewC4ZTpmmSiG2TzBYZGB7D5xIPXQqZJNuxBB1dfXQHfUKf6pUia5tbONx+hgd6
      hTam3mBtbQ3DqjE+NipcmDJNk8jWBoVyneGxcZyCxTLTNEknosRTOXoHhukQrMwClPIZQuEo
      vo4e+ro7hD41amXW10OoDjejwwNivw2dzfU1aoaV8fFxVMF+50MZA6ZBtVrH4bBTLBYPTgAS
      ydOAPB5d0tb8/2LhbauQNHvpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 20' width='192'>
      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
      lkYUliYFEJYmBRCWJgUQliYFEJYmBRCWJgUQliYFEJYmBRCWJgUQlmZsNqiuUy4VqDc75z9r
      KqeFItony0cLcc0YK0C/TaPdJxbbAyAV36fTqnJwWDAlnBBmMzYd2uGh2ygzHT5fCr2v27kR
      CaO2mqaEE8JshgrQreU5PK3RbDapVCqMDrvZ3HyEf3L8r/9lIZ5ChqZDu/1TvPry1KcbAgHG
      w/IVSuL6kqtAwtKkAMLSpADC0qQAwtKkAMLSpADC0qQAwtKkAMLSpADC0qQAwtKkAMLSDBVA
      U7u8/d+/4azbByAd3+XB9rYsjy6uLUMFsNldLMx/uhaob2QYRe1RrUkBxPVkaDao1muROjxk
      yO7BPhEAXcHhtNHt9szKJ4SpDBVAcbjZeOUVUBTsNhvK8DD+sUkcDrtZ+YQwlbECKDaczs+O
      mv7vz0JcJ/LqFZYmBRCWJgUQliYFEJYmBRCWJgUQliYFEJYmBRCWJgUQliYFEJZmbDq01uOj
      P7xNracCcJY7YnPzPoWqzAYV15Ox1aEVO1OhMfoffx9AsdLkzp1VznKnpoQTwmyGh0CartLv
      q2iahqL1OCudgcttRjYhTGfwCzI6tOwO6oUi9Uad6PIyjZbK4tykWfmEMJWh6dA2p5fl5eXP
      bJubjVxqICEGSa4CCUuTAghLkwIIS5MCCEuTAghLkwIIS5MCCEuTAghLkwIIS5MCCEszNhdI
      U9l99ICjXBGAciHLw+1Hsjq0uLYMFaB1dsjQ1DL1SgGAs7MSgKwNKq4tw/cDqP0emnZ+P8CN
      +UVWFsOkkiemhBPCbIZmg3qCYbTYHqHJGSqVCora5TBbYCG6ZFY+IUxleHXo6PLqZ7atjU1c
      aiAhBkmuAglLkwIIS5MCCEuTAghLkwIIS5MCCEuTAghLMzYXSNc5SiWo1NsAqL02sXiCvqqb
      Ek4IsxkqQKeapWUPcJiKA5CMJ5ia8JNIZ00JJ4TZDBVA7Xbw+EZwupwf/20HvmEfSr9vRjYh
      TGeoAN6xMJXMY1yeESqVCpNjfh482GdiRpZGFNeTsaUR7S5u313/sy0B1senLzmSEIOj6Lpu
      +jtYXVVB08zejTE2O4r9yU+Amq6jmf9fZYgC2G1Pfgy6rtPXnq7hqqIoOGxP/ntY13XQL+8Y
      BlIAIZ5W9jfffPPNqw6RPUqRyZYYC/jYfrzH1OT5FOtqMcduPI3P5yYei5MtlJmaCNGqnbEX
      S6Db3ZSyaQqVFg6tTSyexOHxcRDbodbuEwz4B3YMhwcxcmcNXEqPWCyBze1jyOOimD0kmcni
      cSrEE0mKlQbjY6NUS3li8SROzzDHqRi1tobaqpBIphka9rGzs0tXUwiM+AZ2DPnjNKnjU4bd
      NvZicfo4GPF5qZ+dshM7wOfzEo/FOTk9Y3IiRKdRZnc/jqo4KZ8ekf/k+OMJ7O4hMokdyo0e
      Y6ODex6qxRx7iTTB0Djt2ilHpw2CAR/dZpXHO3u4hnwcxGOkD7NMzkw9DR+EaVTqXcZdGsVm
      F/XPTkjZQpnnV2Y4zrdZXpzH4z7/Ig7XkJ+bc2HKxWNa2hB6p4EnEGJ2ZoxS6YxKuYrT4Rzg
      MfRpdMDTb4IvyFxkgspZFdApVprMTgxT7zuJzk7i9p6/oH2BELPTY+RzaRTPBN16Gf/4NDMh
      L7ncKY12d8DHoHFWazM97KCOi2BgmFq1BsBxvsTzqxGOcw1WlqN4XC4AnJ4RogsRKqUszZ4L
      W6+FazjIXHiCs3KFs1IZp9PQ28z/t2yhzMpimMPDY9LHOdq1BgAnR1mWbq2QP8mzemuFIa8b
      G0/JJ8G6rqFqOi63B5fDBlqP/f04fVWn3++j2GwcZQ65EYmQSuxzVjolnauwvDiPrmlouk61
      mKXQgOjsDBtf+CLl0yzqwI5AQdc1NE2nUcqTK/eYmwkQS6TRNA1VU1EUhcxxgdmpIPH9GMXT
      LIUm3LwxiaapaLpO4SRDU/GzMBfhxY11cieHDHJ8qus6qqqhazreIR+dVpVY7Px5UPsqik3h
      KJ0iPDtLJhmjfFYgeVRkeWnh/HnQNOrlPLlKj+jsNBsvvUy1kB/g8/DxMfRVasU8zU6Xw+Nj
      kvF92n0Nta+io1DMHjI2HSF/lH4ahkAK9DtUejZG3Tq5fIEeTqILswy5FBKHJZYWI+icDwdG
      gyFa1TLVRh3dPoRLb6C4R1B6HWr1Onani+xRBt/oOEH/8ICOwUavXaPn9OHUOtTrdeyeEWbD
      kziUPvlyh9nwBIrNzvCwj7HQGNVSkXq9jnNoDLVZwOMfp9+un29zuTlMpxibnGHE5x3QMSjY
      tC6llkbI5+ToOMf4dIS5SJhht51Y5pRodBYdG6MjPgLBMdq1CtVGA03x4LF30Jw+7GqXWr2O
      zeEif5TBGwgxNrDnAbxOhYPjIqu3bxOZmWTUP0o4coPAiJdk4oDI/AKaBqFggGF/gP8FMcSN
      iu1ilYYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 21' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 22' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='Sheet 25' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yesterday and Today comparison' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='campaigns by ROI' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
